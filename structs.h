
#ifndef _9MM_STRUCTS_H
#define _9MM_STRUCTS_H

#include <stdint.h>

struct move {
	unsigned source : 5;
	unsigned dest   : 5;
	unsigned remove : 6;	// 1 bit padding
	uint16_t weight;
};

struct state_key {
	uint64_t board  : 50;
	uint8_t         : 6;
	uint8_t to_move : 8;
};

struct state {
	struct state_key state_key;
	uint8_t place_moves;
	uint8_t slide_moves;
};


// places on the board are numbered 1 to 24 (with 0 being a special case)

/*
	the board

	1---------2---------3
	|         |         |
	|  4------5------6  |
	|  |      |      |  |
	|  |   7--8--9   |  |
	|  |   |     |   |  |
	10-11-12    13--14-15
	|  |   |     |   |  |
	|  |  16-17-18   |  |
	|  |      |      |  |
	| 19-----20-----21  |
	|         |         |
	22-------23--------24
*/

struct board_items {
	uint64_t p01 : 2;
	uint64_t p02 : 2;
	uint64_t p03 : 2;
	uint64_t p04 : 2;
	uint64_t p05 : 2;
	uint64_t p06 : 2;
	uint64_t p07 : 2;
	uint64_t p08 : 2;
	uint64_t p09 : 2;
	uint64_t p10 : 2;
	uint64_t p11 : 2;
	uint64_t p12 : 2;
	uint64_t p13 : 2;
	uint64_t p14 : 2;
	uint64_t p15 : 2;
	uint64_t p16 : 2;
	uint64_t p17 : 2;
	uint64_t p18 : 2;
	uint64_t p19 : 2;
	uint64_t p20 : 2;
	uint64_t p21 : 2;
	uint64_t p22 : 2;
	uint64_t p23 : 2;
	uint64_t p24 : 2;
	uint8_t _pad1;
	uint8_t _pad2;
};

static inline void print_board(struct state_key skey)
{
#define P(i) k[bi->p##i]
	struct board_items *bi = (struct board_items*)&skey;
	char k[] = "+12X";
	printf(
		"%c---------%c---------%c\n"
		"|         |         |\n"
		"|  %c------%c------%c  |\n"
		"|  |      |      |  |\n"
		"|  |   %c--%c--%c   |  |\n"
		"|  |   |     |   |  |\n"
		"%c--%c---%c     %c---%c--%c\n"
		"|  |   |     |   |  |\n"
		"|  |   %c--%c--%c   |  |\n"
		"|  |      |      |  |\n"
		"|  %c------%c------%c  |\n"
		"|         |         |\n"
		"%c---------%c---------%c\n",
		P(01), P(02), P(03),
		P(04), P(05), P(06),
		P(07), P(08), P(09),
		P(10), P(11), P(12),
		P(13), P(14), P(15),
		P(16), P(17), P(18),
		P(19), P(20), P(21),
		P(22), P(23), P(24)
	);
}

#define BOARD_PLACE_COUNT 24
#define BOARD_ARR_LEN 25
static uint8_t board_moves[][5] = {
	[ 0] = { 0},
	[ 1] = { 2, 10,  0},
	[ 2] = { 1,  3,  5,  0},
	[ 3] = { 2, 15,  0},
	[ 4] = { 5, 11,  0},
	[ 5] = { 2,  4,  6,  8,  0},
	[ 6] = { 5, 14,  0},
	[ 7] = { 8, 12,  0},
	[ 8] = { 5,  7,  9,  0},
	[ 9] = { 8, 13,  0},
	[10] = { 1, 11, 22,  0},
	[11] = { 4, 12, 19,  0},
	[12] = { 7, 11, 16,  0},
	[13] = { 9, 14, 18,  0},
	[14] = { 6, 13, 15, 21,  0},
	[15] = { 3, 14, 24,  0},
	[16] = {12, 17,  0},
	[17] = {16, 18, 20,  0},
	[18] = {13, 17,  0},
	[19] = {11, 20,  0},
	[20] = {17, 19, 21, 23,  0},
	[21] = {14, 20,  0},
	[22] = {10, 23,  0},
	[23] = {20, 22, 24,  0},
	[24] = {15, 23,  0}
};

// and a map of possible lines of 3
// every point can be part of 2 possible lines
// this is going to be weird
struct line {
	uint8_t n[3];
};
struct lines {
	struct line line[2];
};
static struct lines board_lines[] = {
	[ 1] = {{{{ 1, 2, 3}},{{ 1,10,22}}}},
	[ 2] = {{{{ 1, 2, 3}},{{ 2, 5, 8}}}},
	[ 3] = {{{{ 1, 2, 3}},{{ 3,15,24}}}},
	[ 4] = {{{{ 4, 5, 6}},{{ 4,11,19}}}},
	[ 5] = {{{{ 4, 5, 6}},{{ 2, 5, 8}}}},
	[ 6] = {{{{ 4, 5, 6}},{{ 6,14,21}}}},
	[ 7] = {{{{ 7, 8, 9}},{{ 7,12,16}}}},
	[ 8] = {{{{ 7, 8, 9}},{{ 2, 5, 8}}}},
	[ 9] = {{{{ 7, 8, 9}},{{ 9,13,18}}}},
	[10] = {{{{10,11,12}},{{ 1,10,22}}}},
	[11] = {{{{10,11,12}},{{ 4,11,19}}}},
	[12] = {{{{10,11,12}},{{ 7,12,16}}}},
	[13] = {{{{13,14,15}},{{ 9,13,18}}}},
	[14] = {{{{13,14,15}},{{ 6,14,21}}}},
	[15] = {{{{13,14,15}},{{ 3,15,24}}}},
	[16] = {{{{16,17,18}},{{ 7,12,16}}}},
	[17] = {{{{16,17,18}},{{17,20,23}}}},
	[18] = {{{{16,17,18}},{{ 9,13,18}}}},
	[19] = {{{{19,20,21}},{{ 4,11,19}}}},
	[20] = {{{{19,20,21}},{{17,20,23}}}},
	[21] = {{{{19,20,21}},{{ 6,14,21}}}},
	[22] = {{{{22,23,24}},{{ 1,10,22}}}},
	[23] = {{{{22,23,24}},{{17,20,23}}}},
	[24] = {{{{22,23,24}},{{ 3,15,24}}}},
};

#endif
